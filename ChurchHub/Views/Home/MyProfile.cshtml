@model ChurchHub.User_Information
@{
    ViewBag.Title = "MyProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<br />
<br />
<br />
<br />
<br />
<br />
<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">
        <div class="row">
            <div class="col-md-12">
                <div class="card mb-4">
                    <h5 class="card-header">My Profile</h5>
                    <div class="card-body">
                        @using (Html.BeginForm("MyProfile", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="d-flex align-items-start align-items-sm-center gap-4">
                                <!-- Display the user's uploaded photo -->
                                <img src="@Url.Content("~/UploadedFiles/" + Model.Image.FirstOrDefault()?.imageFile ?? "default.png")"
                                     alt="user-avatar"
                                     class="d-block rounded"
                                     height="100"
                                     width="100"
                                     id="uploadedAvatar" />

                                <div class="button-wrapper">
                                    <label for="profilePicture" class="form-label">Upload new photo</label>
                                    <input type="file" id="profilePicture" name="ProfilePicture" class="d-none d-sm-block" accept="image/png, image/jpeg" />

                                    <p class="text-muted mb-0">Allowed JPG, GIF or PNG. Max size of 800K</p>
                                    <br />

                                </div>
                            </div>
                       

                        <hr class="my-0" />
                        <div class="card-body">
                                <div class="row">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(Model => Model.id)
                                    <div class="col-md col-sm-12 form-group mb-3 mb-3" hidden>
                                        @Html.LabelFor(model => model.userId, htmlAttributes: new { @class = "control-label col-md-2" })

                                        @Html.EditorFor(model => model.userId, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.userId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="mb-3 col-md-6">
                                        <label for="firstName" class="form-label">First Name</label>
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="mb-3 col-md-6">
                                        <label for="lastName" class="form-label">Last Name</label>
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="mb-3 col-md-6">
                                        <label for="email" class="form-label">E-mail</label>
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", Value = ViewBag.UserEmail } })
                                    </div>
                                    <div class="mb-3 col-md-6">
                                        <label for="phone" class="form-label">Phone Number</label>
                                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="mb-3 col-md-6">
                                        <label for="address" class="form-label">Address</label>
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="mb-3 col-md-6">
                                        <label for="state" class="form-label">State</label>
                                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="mb-3 col-md-6">
                                        <label for="zipCode" class="form-label">Zip Code</label>
                                        @Html.EditorFor(model => model.Zip_code, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Zip_code, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-12 form-group mb-3 mb-3" hidden>
                                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })

                                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>


                                </div>
                                <div class="mt-2">
                                    <button type="submit" class="btn btn-primary me-2">Save</button>
                                    <button type="reset" class="btn btn-outline-secondary">Cancel</button>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-10">
                                        @if (!String.IsNullOrEmpty(ViewBag.Error as String))
                                        {
                                            <div style="color: red;">
                                                @ViewBag.Error
                                            </div>
                                        }
                                    </div>
                                </div>

                        </div>
                    <!-- /Account -->
                        }
                    </div>
                </div>
            </div>
        </div>
    <!-- / Content -->
    </div>
 </div>
                        
