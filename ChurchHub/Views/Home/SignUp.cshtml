@model ChurchHub.User_Account
@{
    ViewBag.Title = "SignUp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    <input type="hidden" name="ReturnUrl" value="@ViewBag.ReturnUrl" />

<section data-bs-version="5.1" class="form03 cid-uagZCfXL7S" id="form03-1z">

    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12 col-lg item-wrapper">
                <div class="mbr-section-head mb-5">
                    <h3 class="mbr-section-title mbr-fonts-style align-center mb-0 display-5">
                        <strong>Sign Up</strong>
                    </h3>

                </div>
                <div class="col-lg-12 mx-auto mbr-form" data-form-type="formoid">

                    <div class="dragArea row">
                        @if (User.Identity.IsAuthenticated)
                        {

                                <div class="col-12 form-group mb-3 mb-3">
                                    <input type="text" class="form-control" name="email" value="" placeholder="Email" required />
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md col-sm-12 form-group mb-3 mb-3">
                                    <input type="text" class="form-control" name="username" value="" placeholder="Username" required />
                                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md col-sm-12 form-group mb-3 mb-3">
                                    <input type="text" class="form-control" name="password" value="" placeholder="Password" required />
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-12 form-group mb-3 mb-3">
                                    <input type="text" class="form-control" name="ConfirmPass" value="" placeholder="Confirm Password" required />
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>                                
                            
                        }
                        else
                        {
                        <div class="col-md col-sm-12 form-group mb-3 mb-3">
                            <input type="text" class="form-control" name="username" value="" placeholder="Username" required />
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-12 form-group mb-3 mb-3">
                            <input type="text" class="form-control" name="email" value="" placeholder="Email" required />
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md col-sm-12 form-group mb-3 mb-3">
                            <input type="text" class="form-control" name="password" value="" placeholder="Password" required />
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md col-sm-12 form-group mb-3 mb-3">
                            <input type="text" class="form-control" name="ConfirmPass" value="" placeholder="Confirm Password" required />
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-12 form-group mb-3 mb-3" hidden>
                            @Html.DropDownList("Role", (IEnumerable<SelectListItem>)ViewBag.Role, new { @class = "form-control"})
                        </div>

                        }
                        <div class="form-group">
                            <div class="col-md-10">
                                @if (!String.IsNullOrEmpty(ViewBag.Error as String))
                                {
                                    <div style="color: red;">
                                        @ViewBag.Error
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="form-group">
                            <br />
                            <div class="col-md-10">

                                <input type="submit" class="btn btn-success" value="Create" style="width: 100%;padding-left:10px;" onclick="window.location.href='@Url.Action("MyProfile", "Home")'" />
                            </div>
                        </div>                 
                    </div>

                </div>

                
            </div>
            <div class="col-12 col-lg-6">
                <div class="image-wrapper">
                    <img class="w-100" src="/assets/images/logo.ico" alt="Mobirise Website Builder">
                </div>
            </div>
        </div>
    </div>

</section>
}
