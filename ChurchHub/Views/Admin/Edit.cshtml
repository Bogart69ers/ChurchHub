@model ChurchHub.User_Account

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-xl">
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Create Account</h5>
                </div>
                <div class="card-body">
                    <form>
                        <div class="mb-3">
                            <label class="form-label">USER ID</label><br />                          
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.DisplayFor(model => model.id)
                        </div>
                        <div class="mb-3" hidden>
                            @Html.HiddenFor(model => model.UserId)
                            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3" hidden>
                            @Html.HiddenFor(model => model.VerCode)
                            @Html.ValidationMessageFor(model => model.VerCode, "", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3" hidden>
                            @Html.HiddenFor(model => model.Date_created)
                            @Html.ValidationMessageFor(model => model.Date_created, "", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3" hidden>
                            @Html.HiddenFor(model => model.Date_modified, new { Value = DateTime.Now })
                            @Html.ValidationMessageFor(model => model.Date_created, "", new { @class = "text-danger" })
                        </div>
    
                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email", required = "required", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Username</label>
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "Username", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Password</label>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Role</label>
                            @Html.DropDownList("Role", (IEnumerable<SelectListItem>)ViewBag.Role, new { @class = "form-control" })
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Account Status</label>
                            @Html.DropDownListFor(model => model.AccountStatus, new SelectList(new List<SelectListItem>
                            {
                                new SelectListItem { Text = "Active", Value = "1" },
                                new SelectListItem { Text = "Inactive", Value = "0" }
                            }, "Value", "Text"), "Select Status", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AccountStatus, "", new { @class = "text-danger" })
                        </div>


                        <button type="submit" class="btn btn-primary">Save</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}